process TEST = {
        source = EmptySource { untracked int32 maxEvents = 1 }
        module int = IntProducer { int32 ivalue = 2 }

        module python = PythonFilter {
                vstring command = {
                        'class F1:',
                        '  def __init__(self,cut):',
                        '    self.cut = cut',
                        '  def filter(self,event):',
                        '    handle = edm.Handle("edmtest::IntProduct")',
                        '    event.getByLabel("int",handle)',
                        '    print handle.get().value',
                        '    if self.cut == handle.get().value:',
                        '      return False',
                        '    print "boo"',
                        '    return True',
                        'filter = F1(1)'
                }
        }

        module test = IntTestAnalyzer {
                untracked int32 valueMustMatch = 2
                untracked string moduleLabel = "int"
        }
        service = Tracer {}

        untracked PSet options = { untracked bool allowUnscheduled = true }
        path p = {python & test}
}
